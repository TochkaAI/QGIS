#!/bin/bash

set -u

jobs=$(nproc)
[ "$jobs" -gt 16 ] && jobs=16
echo "jobs: $jobs"

rebuild=
print_help=
build_mode=release
need_packages=

build_deb_package=

# Директория этого скрипта
script_dir=$(dirname $(readlink -f $0))
echo "script_dir: $script_dir"

# Определение параметров host-системы
if [ ! -e $script_dir/setup/os_detect ]; then
    echo "Error: os_detect script not found"
    exit 1
fi
. $script_dir/setup/os_detect

function display_help()
{
cat << EOF
Usage: ${0##*/}
  -h   display this help and exit
  -r   full rebuild the project
  -D   build deb package
EOF
}

# Обработка позиционных параметров:
#    http://wiki.bash-hackers.org/scripting/posparams
while test -n ${1:-""}
do
    case "$1" in
        -h)
            print_help=yes
            shift
            ;;
        -r)
            rebuild=yes
            shift
            ;;
        -D)
            build_deb_package=yes
            shift
            ;;
        -*)
            echo "Error: Unknown option: $1" >&2
            exit 1
            ;;
        *)  # No more options
            #break
            echo "Error: Unknown option: $1" >&2
            exit 1
            ;;
    esac
done

if [ "$print_help" = "yes" ]; then
    display_help
    exit 0
fi

function check_need_package()
{
    dpkg -s $1 &> /dev/null
    [ "$?" -ne 0 ] && need_packages="$need_packages $1"
}

#need_packages=
#
# if [ -n "$need_packages" ]; then
#     echo "Error: Need to install packages:$need_packages"
#     echo "    Use: sudo apt-get install $need_packages"
#     exit 1
# fi

if [ ! -x /usr/bin/md5deep ]; then
    if [ ! -L /usr/local/bin/md5deep ]; then
        echo "Need create symlink for md5deep"
        sudo ln -sf /usr/bin/hashdeep /usr/local/bin/md5deep
    fi
fi

git_branch=$(git status -b -s | head -n1 | sed 's/\./ /' | cut -d' ' -f2 | sed 's/\//_/g')
build_subdir=${build_mode}-${git_branch}
build_dir=$script_dir/build_cmake/$build_subdir

[ "$rebuild" = "yes"  ] && rm -rf $build_dir
mkdir -p $build_dir
cd $build_dir

#
# Сборка проекта
#
set -e
cmake ../..
make -j $jobs
cd $script_dir

if [ "$build_deb_package" != "yes" ]; then
     exit 0
fi

#
# Создание deb-пакетов
#
package_vers=$(head -n1 VERSION)
echo "package_vers: $package_vers"

package_date=$(date +%Y%m%d)
echo "package_date: $package_date"

gitrev=$(git log -1 --pretty=%h)
echo "gitrev: $gitrev"

deb_package_vers=${package_vers}-${package_date}git${gitrev}

mkdir -p $script_dir/packages/last
rm -rf   $script_dir/packages/last/*

#
# Формирование deb-пакета qgis
#
if [ "$build_deb_package" = "yes" ]
then
    . $script_dir/setup/deb-qgis
fi
